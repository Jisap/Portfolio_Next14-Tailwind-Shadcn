import React, { useState, useEffect } from 'react'

const useScrollProgress = () => {

  const [completion, setCompletion] = useState();

  useEffect(() => {
    const updateScrollCompletion = () => {
      const currentProgress = window.scrollY;                                // Posici칩n actual del scroll
      const scrollHeight = document.body.scrollHeight - window.innerHeight   // Altura m치xima que se puede desplazar verticalmente sin ver mas contenido nuevo
                                                                             // Altura del body - Altura visible en la ventana del navegador  
      if(scrollHeight){
        setCompletion(Number(currentProgress / scrollHeight).toFixed(2) * 100) // C치lculo del progreso del scroll como % -> completion
      }                                                                        // Cuanto supone la altura actual entre el m치ximo que se puede desplazar 
    };
    
    window.addEventListener('scroll', updateScrollCompletion);

    return ()=> window.removeEventListener('scroll', updateScrollCompletion)
  },[])
  return completion
}

export default useScrollProgress